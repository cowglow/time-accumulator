{"version":3,"sources":["hooks/useLocalStorage.ts","lib/constants.ts","contexts/AppStateContext.tsx","components/ActionController.tsx","components/ClockDisplay.tsx","hooks/useTimer.ts","lib/format-timestamp/format-timestamp.ts","components/LogDisplay.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["useLocalStorage","key","defaultValue","useState","localValue","window","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify","ERROR_UNINITIALIZED_CONTEXT","defaultValues","log","timestamp","actionToggle","Error","resetLog","AppStateContext","React","createContext","AppStateProvider","children","defaultCheckin","checkin","setCheckin","timeLog","setTimeLog","Provider","moment","unix","timeIn","timeOut","toString","useAppState","useContext","ActionController","className","Button","variant","onClick","size","ClockDisplay","reset","set","hour","minute","second","millisecond","clock","timer","setTimer","useEffect","timeout","setTimeout","duration","diff","parseInt","clearTimeout","hours","minutes","seconds","milliseconds","Math","floor","useTimer","Card","Body","padStart","days","formatLog","start","end","mStart","Date","mEnd","abs","getTime","getDay","getDate","getUTCHours","LogDisplay","map","entry","App","Container","Row","Col","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaeae23d.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useLocalStorage = (\n  key: string,\n  defaultValue: boolean | string | object\n) => {\n  const [value, setValue] = useState(() => {\n    const localValue = window.localStorage.getItem(key);\n    return localValue !== null ? JSON.parse(localValue) : defaultValue;\n  });\n\n  window.localStorage.setItem(key, JSON.stringify(value));\n\n  return [value, setValue];\n};\n"," export const LOCALSTORAGE_CHECKIN_KEY = 'LOCALSTORAGE_CHECKIN_KEY';\nexport const LOCALSTORAGE_LOG_KEY = 'LOCALSTORAGE_LOG_KEY';\nexport const ERROR_UNINITIALIZED_CONTEXT = 'Error: Uninitialized context';\n","import React from 'react';\nimport moment from 'moment';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport {\n  ERROR_UNINITIALIZED_CONTEXT,\n  LOCALSTORAGE_CHECKIN_KEY,\n  LOCALSTORAGE_LOG_KEY,\n} from '../lib/constants';\n\ntype LogType = {\n  timeIn: string;\n  timeOut: string;\n};\n\n/** Context */\nexport interface AppStateContextProps {\n  log: LogType[];\n  timestamp: false | string;\n  actionToggle: () => void;\n  resetLog: () => void;\n}\n\nconst defaultValues: AppStateContextProps = {\n  log: [],\n  timestamp: false,\n  actionToggle: () => {\n    throw Error(ERROR_UNINITIALIZED_CONTEXT);\n  },\n  resetLog: () => {\n    throw Error(ERROR_UNINITIALIZED_CONTEXT);\n  },\n};\n\nconst AppStateContext =\n  React.createContext<AppStateContextProps>(defaultValues);\n\n/** Provider */\ninterface AppStateProviderProps {\n  children: React.ReactNode;\n  defaultValue?: AppStateContextProps;\n}\n\nexport const AppStateProvider: React.FC<AppStateProviderProps> = ({\n  children,\n  defaultValue,\n}) => {\n  const defaultCheckin = defaultValue ? defaultValue.timestamp : false;\n  const [checkin, setCheckin] = useLocalStorage(\n    LOCALSTORAGE_CHECKIN_KEY,\n    defaultCheckin\n  );\n\n  const [timeLog, setTimeLog] = useLocalStorage(LOCALSTORAGE_LOG_KEY, []);\n\n  const toggle = () => {\n    const timestamp = moment().unix();\n    if (!checkin) {\n      setCheckin(timestamp.toString());\n    } else {\n      setTimeLog([\n        ...timeLog,\n        {\n          timeIn: checkin,\n          timeOut: timestamp.toString(),\n        },\n      ]);\n      setCheckin(false);\n    }\n  };\n\n  const resetLog = () => {\n    setTimeLog([]);\n  };\n  return (\n    <AppStateContext.Provider\n      value={{\n        actionToggle: toggle,\n        log: timeLog,\n        timestamp: checkin,\n        resetLog,\n      }}\n    >\n      {children}\n    </AppStateContext.Provider>\n  );\n};\n\n/** Hook */\nexport const useAppState = () => {\n  return React.useContext(AppStateContext);\n};\n","import React from 'react';\nimport { useAppState } from '../contexts/AppStateContext';\nimport Button from 'react-bootstrap/Button';\n\ninterface ActionControllerProps {\n  children: React.ReactNode;\n}\nexport const ActionController: React.FC<ActionControllerProps> = ({\n  children,\n}) => {\n  const { actionToggle, timestamp, resetLog } = useAppState();\n  return (\n    <div className=\"d-grid gap-2\">\n      <Button variant=\"secondary\" onClick={resetLog}>\n        Reset Log\n      </Button>\n      {children}\n      <Button\n        variant={!timestamp ? 'success' : 'danger'}\n        size=\"lg\"\n        onClick={actionToggle}\n      >\n        {!timestamp ? 'Start' : 'Stop'}\n      </Button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTimer } from '../hooks/useTimer';\nimport Card from 'react-bootstrap/Card';\n\ninterface ClockDisplayProps {}\n\nexport const ClockDisplay: React.FunctionComponent<ClockDisplayProps> = () => {\n  const { hour, minute, seconds } = useTimer();\n\n  return (\n    <Card>\n      <Card.Body>\n        <h1 className=\"display-1\">\n          <span>{hour.toString().padStart(2, '0')}</span>:\n          <span>{minute.toString().padStart(2, '0')}</span>:\n          <span>{seconds.toString().padStart(2, '0')}</span>\n        </h1>\n      </Card.Body>\n    </Card>\n  );\n};\n","import moment, { Duration, Moment } from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { useAppState } from \"../contexts/AppStateContext\";\n\nexport const useTimer = () => {\n  const { timestamp } = useAppState();\n\n  const reset = moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n  const [clock] = useState<Moment | Duration>(reset);\n\n  const [timer, setTimer] = useState(clock);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (timestamp) {\n        setTimer(\n          moment.duration(moment().diff(moment.unix(parseInt(timestamp))))\n        );\n      } else {\n        setTimer(reset);\n      }\n    }, 100);\n    return () => {\n      clearTimeout(timeout);\n    };\n  });\n\n  return {\n    hour: timer.hours(),\n    minute: timer.minutes(),\n    seconds: timer.seconds(),\n    milliseconds: Math.floor(timer.milliseconds() * 0.1),\n  };\n};\n","const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\n\nexport function formatTimestamp(s: any): FormatTimeOutput {\n  return new Date(s * 1e3).toISOString();\n}\n\nexport function formatLog(start: number, end: number) {\n  const mStart = new Date(start * 1000);\n  const mEnd = new Date(end * 1000);\n\n  const diff = Math.abs(mEnd.getTime() - mStart.getTime());\n\n  const hours = Math.floor(diff / 1000 / 60 / 60) % 24;\n  const minutes = Math.floor(diff / 1000 / 60) % 60;\n  const seconds = Math.floor(diff / 1000) % 60;\n\n  return (\n    days[mEnd.getDay()] +\n    ' ' +\n    mEnd.getDate() +\n    ' ' +\n    hours.toString().padStart(2, '0') +\n    ':' +\n    minutes.toString().padStart(2, '0') +\n    ':' +\n    seconds.toString().padStart(2, '0') +\n    ' ' +\n    mEnd.getUTCHours() +\n    ':' +\n    mEnd.getUTCHours()\n  );\n}\n","import React from 'react';\nimport { useAppState } from '../contexts/AppStateContext';\nimport { formatLog } from '../lib/format-timestamp/format-timestamp';\n\ninterface LogDisplayProps {}\n\nexport const LogDisplay: React.FC<LogDisplayProps> = () => {\n  const { log } = useAppState();\n  return (\n    <div>\n      <div />\n      <ol>\n        {log.map((entry, key) => {\n          return (\n            <li key={key}>\n              {formatLog(parseInt(entry.timeIn), parseInt(entry.timeOut))}\n            </li>\n          );\n        })}\n      </ol>\n      <div />\n    </div>\n  );\n};\n","import React from 'react';\nimport { ActionController } from './ActionController';\nimport { ClockDisplay } from './ClockDisplay';\nimport { Col, Container, Row } from 'react-bootstrap';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { LogDisplay } from './LogDisplay';\n\nexport const App = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <ActionController>\n            <LogDisplay />\n            <ClockDisplay />\n          </ActionController>\n          <footer>\n            <a href=\"https://github.com/cowglow/time-accumulator\">\n              GitHub Repo.\n            </a>\n          </footer>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppStateProvider } from './contexts/AppStateContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppStateProvider>\n      <App />\n    </AppStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}