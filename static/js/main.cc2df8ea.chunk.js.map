{"version":3,"sources":["components/ActionController.module.css","components/App.module.css","hooks/useLocalStorage.ts","lib/constants.ts","contexts/AppStateContext.tsx","components/ClockDisplay.tsx","hooks/useTimer.ts","lib/format-timestamp/format-timestamp.ts","components/LogDisplay.tsx","components/ActionController.tsx","components/App.tsx","reportWebVitals.ts","index.tsx","components/LogDisplay.module.css","components/ClockDisplay.module.css"],"names":["module","exports","useLocalStorage","key","defaultValue","useState","localValue","window","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify","ERROR_UNINITIALIZED_CONTEXT","defaultValues","log","timestamp","actionToggle","Error","resetLog","AppStateContext","React","createContext","AppStateProvider","children","defaultCheckin","checkin","setCheckin","timeLog","setTimeLog","Provider","moment","unix","timeIn","timeOut","toString","useAppState","useContext","ClockDisplay","reset","set","hour","minute","second","millisecond","clock","timer","setTimer","useEffect","timeout","setTimeout","duration","diff","parseInt","clearTimeout","hours","minutes","seconds","milliseconds","Math","floor","useTimer","className","styles","root","padStart","days","formatLog","start","end","mStart","Date","mEnd","abs","getTime","getDay","getDate","getUTCHours","LogDisplay","gradient","map","entry","ActionController","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc2df8ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ActionController_root__2kE3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1Ylx4\"};","import { useState } from 'react';\n\nexport const useLocalStorage = (\n  key: string,\n  defaultValue: boolean | string | object\n) => {\n  const [value, setValue] = useState(() => {\n    const localValue = window.localStorage.getItem(key);\n    return localValue !== null ? JSON.parse(localValue) : defaultValue;\n  });\n\n  window.localStorage.setItem(key, JSON.stringify(value));\n\n  return [value, setValue];\n};\n"," export const LOCALSTORAGE_CHECKIN_KEY = 'LOCALSTORAGE_CHECKIN_KEY';\nexport const LOCALSTORAGE_LOG_KEY = 'LOCALSTORAGE_LOG_KEY';\nexport const ERROR_UNINITIALIZED_CONTEXT = 'Error: Uninitialized context';\n","import React from 'react';\nimport moment from 'moment';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport {\n  ERROR_UNINITIALIZED_CONTEXT,\n  LOCALSTORAGE_CHECKIN_KEY,\n  LOCALSTORAGE_LOG_KEY,\n} from '../lib/constants';\n\ntype LogType = {\n  timeIn: string;\n  timeOut: string;\n};\n\n/** Context */\nexport interface AppStateContextProps {\n  log: LogType[];\n  timestamp: false | string;\n  actionToggle: () => void;\n  resetLog: () => void;\n}\n\nconst defaultValues: AppStateContextProps = {\n  log: [],\n  timestamp: false,\n  actionToggle: () => {\n    throw Error(ERROR_UNINITIALIZED_CONTEXT);\n  },\n  resetLog: () => {\n    throw Error(ERROR_UNINITIALIZED_CONTEXT);\n  },\n};\n\nconst AppStateContext =\n  React.createContext<AppStateContextProps>(defaultValues);\n\n/** Provider */\ninterface AppStateProviderProps {\n  children: React.ReactNode;\n  defaultValue?: AppStateContextProps;\n}\n\nexport const AppStateProvider: React.FC<AppStateProviderProps> = ({\n  children,\n  defaultValue,\n}) => {\n  const defaultCheckin = defaultValue ? defaultValue.timestamp : false;\n  const [checkin, setCheckin] = useLocalStorage(\n    LOCALSTORAGE_CHECKIN_KEY,\n    defaultCheckin\n  );\n\n  const [timeLog, setTimeLog] = useLocalStorage(LOCALSTORAGE_LOG_KEY, []);\n\n  const toggle = () => {\n    const timestamp = moment().unix();\n    if (!checkin) {\n      setCheckin(timestamp.toString());\n    } else {\n      setTimeLog([\n        ...timeLog,\n        {\n          timeIn: checkin,\n          timeOut: timestamp.toString(),\n        },\n      ]);\n      setCheckin(false);\n    }\n  };\n\n  const resetLog = () => {\n    setTimeLog([]);\n  };\n  return (\n    <AppStateContext.Provider\n      value={{\n        actionToggle: toggle,\n        log: timeLog,\n        timestamp: checkin,\n        resetLog,\n      }}\n    >\n      {children}\n    </AppStateContext.Provider>\n  );\n};\n\n/** Hook */\nexport const useAppState = () => {\n  return React.useContext(AppStateContext);\n};\n","import React from 'react';\nimport { useTimer } from '../hooks/useTimer';\nimport styles from './ClockDisplay.module.css';\n\ninterface ClockDisplayProps {}\n\nexport const ClockDisplay: React.FunctionComponent<ClockDisplayProps> = () => {\n  const { hour, minute, seconds } = useTimer();\n\n  return (\n    <div className={styles.root}>\n      <h1>\n        <span>{hour.toString().padStart(2, '0')}</span>:\n        <span>{minute.toString().padStart(2, '0')}</span>:\n        <span>{seconds.toString().padStart(2, '0')}</span>\n      </h1>\n    </div>\n  );\n};\n","import moment, { Duration, Moment } from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { useAppState } from \"../contexts/AppStateContext\";\n\nexport const useTimer = () => {\n  const { timestamp } = useAppState();\n\n  const reset = moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n  const [clock] = useState<Moment | Duration>(reset);\n\n  const [timer, setTimer] = useState(clock);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (timestamp) {\n        setTimer(\n          moment.duration(moment().diff(moment.unix(parseInt(timestamp))))\n        );\n      } else {\n        setTimer(reset);\n      }\n    }, 100);\n    return () => {\n      clearTimeout(timeout);\n    };\n  });\n\n  return {\n    hour: timer.hours(),\n    minute: timer.minutes(),\n    seconds: timer.seconds(),\n    milliseconds: Math.floor(timer.milliseconds() * 0.1),\n  };\n};\n","const days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'];\n\nexport function formatTimestamp(s: any): FormatTimeOutput {\n  return new Date(s * 1e3).toISOString();\n}\n\nexport function formatLog(start: number, end: number) {\n  const mStart = new Date(start * 1000);\n  const mEnd = new Date(end * 1000);\n\n  const diff = Math.abs(mEnd.getTime() - mStart.getTime());\n\n  const hours = Math.floor(diff / 1000 / 60 / 60) % 24;\n  const minutes = Math.floor(diff / 1000 / 60) % 60;\n  const seconds = Math.floor(diff / 1000) % 60;\n\n  return (\n    days[mEnd.getDay()] +\n    ' ' +\n    mEnd.getDate() +\n    ' ' +\n    hours.toString().padStart(2, '0') +\n    ':' +\n    minutes.toString().padStart(2, '0') +\n    ':' +\n    seconds.toString().padStart(2, '0') +\n    ' ' +\n    mEnd.getUTCHours() +\n    ':' +\n    mEnd.getUTCHours()\n  );\n}\n","import React from 'react';\nimport { useAppState } from '../contexts/AppStateContext';\nimport { formatLog } from '../lib/format-timestamp/format-timestamp';\nimport styles from './LogDisplay.module.css';\n\ninterface LogDisplayProps {}\n\nexport const LogDisplay: React.FC<LogDisplayProps> = () => {\n  const { log } = useAppState();\n  return (\n    <div className={styles.root}>\n      <div className={styles.gradient} />\n      <ol>\n        {log.map((entry, key) => {\n          return (\n            <li key={key} className={styles.log}>\n              {formatLog(parseInt(entry.timeIn), parseInt(entry.timeOut))}\n            </li>\n          );\n        })}\n      </ol>\n      <div className={styles.gradient} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../contexts/AppStateContext\";\nimport styles from \"./ActionController.module.css\";\n\ninterface ActionControllerProps {\n  children: React.ReactNode;\n}\nexport const ActionController: React.FC<ActionControllerProps> = ({\n  children,\n}) => {\n  const { actionToggle, timestamp, resetLog } = useAppState();\n  return (\n    <div className={styles.root}>\n      <button onClick={resetLog}>Reset Log</button>\n      {children}\n      <button onClick={actionToggle}>{!timestamp ? 'Start' : 'Stop'}</button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ClockDisplay } from './ClockDisplay';\nimport { LogDisplay } from './LogDisplay';\nimport { ActionController } from './ActionController';\nimport styles from './App.module.css';\n\nexport const App = () => {\n  return (\n    <div className={styles.root}>\n      <header>\n        <LogDisplay />\n      </header>\n      <main>\n        <ActionController>\n          <ClockDisplay />\n        </ActionController>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppStateProvider } from './contexts/AppStateContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppStateProvider>\n      <App />\n    </AppStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LogDisplay_root__3Hw-P\",\"gradient\":\"LogDisplay_gradient__JDCCU\",\"log\":\"LogDisplay_log__3BSsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClockDisplay_root__e5YcN\"};"],"sourceRoot":""}